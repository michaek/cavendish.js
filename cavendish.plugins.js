// Generated by CoffeeScript 1.3.3
(function() {
  var $, CavendishArrowsPlugin, CavendishEventsPlugin, CavendishPagerPlugin, CavendishPanPlugin, CavendishPlugin,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $ = jQuery;

  CavendishPlugin = (function() {

    function CavendishPlugin(cavendish) {
      this.cavendish = cavendish;
    }

    CavendishPlugin.prototype.setup = function() {};

    CavendishPlugin.prototype.transition = function() {};

    CavendishPlugin.prototype.defaults = {
      class_names: {
        active: 'active',
        disabled: 'disabled'
      }
    };

    return CavendishPlugin;

  })();

  CavendishEventsPlugin = (function(_super) {

    __extends(CavendishEventsPlugin, _super);

    function CavendishEventsPlugin() {
      return CavendishEventsPlugin.__super__.constructor.apply(this, arguments);
    }

    CavendishEventsPlugin.prototype.setup = function() {
      return this.cavendish.show.trigger('cavendish-setup', [this.cavendish]);
    };

    CavendishEventsPlugin.prototype.transition = function() {
      return this.cavendish.show.trigger('cavendish-transition', [this.cavendish]);
    };

    return CavendishEventsPlugin;

  })(CavendishPlugin);

  CavendishPagerPlugin = (function(_super) {

    __extends(CavendishPagerPlugin, _super);

    function CavendishPagerPlugin() {
      return CavendishPagerPlugin.__super__.constructor.apply(this, arguments);
    }

    CavendishPagerPlugin.prototype.setup = function() {
      var _this = this;
      this.pager = $('.cavendish-pager');
      return this.pager.find('a').each(function(index, el) {
        return $(el).click(function() {
          _this.cavendish.goto(index);
          return false;
        });
      });
    };

    CavendishPagerPlugin.prototype.transition = function() {
      return this.pager.find('li').removeClass(this.cavendish.options.class_names.active).eq(this.cavendish.index).addClass(this.cavendish.options.class_names.active);
    };

    return CavendishPagerPlugin;

  })(CavendishPlugin);

  CavendishArrowsPlugin = (function(_super) {

    __extends(CavendishArrowsPlugin, _super);

    function CavendishArrowsPlugin() {
      return CavendishArrowsPlugin.__super__.constructor.apply(this, arguments);
    }

    CavendishArrowsPlugin.prototype.setup = function() {
      var _this = this;
      this.next = $('.cavendish-next').click(function() {
        _this.cavendish.next();
        return false;
      });
      return this.prev = $('.cavendish-prev').click(function() {
        _this.cavendish.prev();
        return false;
      });
    };

    CavendishArrowsPlugin.prototype.transition = function() {
      var last;
      if (!this.cavendish.options.loop) {
        last = this.cavendish.index + 1 === this.cavendish.length;
        this.next.toggleClass(this.cavendish.options.class_names.disabled, last);
        return this.prev.toggleClass(this.cavendish.options.class_names.disabled, this.cavendish.index === 0);
      }
    };

    return CavendishArrowsPlugin;

  })(CavendishPlugin);

  CavendishPanPlugin = (function(_super) {

    __extends(CavendishPanPlugin, _super);

    function CavendishPanPlugin() {
      return CavendishPanPlugin.__super__.constructor.apply(this, arguments);
    }

    CavendishPanPlugin.prototype.setup = function() {
      var _this = this;
      this.background = $('.cavendish-background ol.slides');
      return this.background.children().each(function(index, el) {
        return $(el).css('left', index * 100 + '%');
      });
    };

    CavendishPanPlugin.prototype.transition = function() {
      return this.background.css('left', (this.cavendish.index * -100) + '%');
    };

    return CavendishPanPlugin;

  })(CavendishPlugin);

  $.fn.cavendish.plugins = {
    events: CavendishEventsPlugin,
    pager: CavendishPagerPlugin,
    arrows: CavendishArrowsPlugin,
    pan: CavendishPanPlugin
  };

}).call(this);
